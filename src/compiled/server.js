(function() {
  // server.js
  // set up ======================================================================
  // get all the tools we need
  var app, bodyParser, cookieParser, environment, express, flash, mongoose, morgan, passport, port, session;

  express = require('express');

  app = express();

  port = process.env.PORT || 8080;

  mongoose = require('mongoose');

  passport = require('passport');

  flash = require('connect-flash');

  morgan = require('morgan');

  cookieParser = require('cookie-parser');

  bodyParser = require('body-parser');

  session = require('express-session');

  environment = require('./server/config/environment')();

  // configuration ===============================================================
  mongoose.connect(environment.dbHost, environment.dbName);

  // connect to our database
  require('./server/business/passport')(passport);

  // pass passport for configuration
  // set up our express application
  app.use(morgan('dev'));

  // log every request to the console
  app.use(cookieParser());

  // read cookies (needed for auth)
  app.use(bodyParser.json());

  // get information from html forms
  app.use(bodyParser.urlencoded({
    extended: true
  }));

  app.set('view engine', 'ejs');

  app.set('views', './server/views');

  // set up ejs for templating
  // required for passport
  app.use(session({
    secret: 'ilovescotchscotchyscotchscotch',
    resave: true,
    saveUninitialized: true
  }));

  app.use(passport.initialize());

  app.use(passport.session());

  // persistent login sessions
  app.use(flash());

  // use connect-flash for flash messages stored in session
  // routes ======================================================================
  require('./server/routes.js')(app, passport);

  // load our routes and pass in our app and fully configured passport
  // launch ======================================================================
  app.listen(port);

  console.log('The magic happens on port ' + port);

  // ---
// generated by js2coffee 2.2.0

}).call(this);
